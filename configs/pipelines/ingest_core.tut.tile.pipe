# Ingest video pipeline using pytorch descriptors
#
# Runs a multi-node object tracking, descriptor generation, and indexing pipeline
#
# This pipe requires an input source node 'input' to be defined elsewhere

# ================================== VIDEO INPUT ===================================
process downsampler
  :: downsample
  :target_frame_rate                           5
  :burst_frame_count                           0
  :burst_frame_break                           0

connect from input.image
        to   downsampler.input_1
connect from input.image_file_name
        to   downsampler.input_2
connect from input.frame_rate
        to   downsampler.frame_rate
connect from input.timestamp
        to   downsampler.timestamp

# =================================== DETECTOR =====================================

include common_default_detector.pipe

process detector_writer
  :: detected_object_output

  # Type of file to output
  :file_name                                   [INSERT_ME]
  :writer:type                                 viame_csv

connect from downsampler.output_1
        to   detector.image

connect from detector.detected_object_set
        to   detector_writer.detected_object_set
connect from downsampler.output_2
        to   detector_writer.image_file_name

# ================================= CORE TRACKER ===================================

process tracker
  :: SRNN_tracking
  :siamese_model_input_size                    224
  :detection_select_threshold                  0.3
  :similarity_threshold                        0.3
  :terminate_track_threshold                   2
  :IOU_tracker_flag                            False
  :IOU_accept_threshold                        0.5
  :IOU_reject_threshold                        0.1
  :track_search_threshold                      2
  :gpu_list                                    None

  relativepath siamese_model_path =            models/siamese_model.pt
  :siamese_batch_size                          128

  relativepath targetRNN_AIM_model_path =      models/rnn_f_aim.pt
  relativepath targetRNN_AIM_V_model_path =    models/rnn_ml_aim.pt
  :targetRNN_batch_size                        256 

connect from downsampler.output_1
        to   tracker.image
connect from downsampler.timestamp
        to   tracker.timestamp
connect from detector.detected_object_set
        to   tracker.detected_object_set

# ============================ ANALYZE AND INDEX DATA ==============================

process track_descriptor
 :: compute_track_descriptors
  :add_custom_uid                             true
  :uid_basename                               [INSERT_ME]
  :computer:type                              average

connect from downsampler.output_1
        to   track_descriptor.image
connect from downsampler.timestamp
        to   track_descriptor.timestamp
connect from tracker.object_track_set
        to   track_descriptor.object_track_set

process kwa_writer
  :: kw_archive_writer
  :output_directory                           [INSERT_ME]
  :base_filename                              [INSERT_ME]
  :separate_meta                              true
  :stream_id                                  [INSERT_ME]
  :compress_image                             true
  :static/gsd[ro]                             common:fixed_gsd
  :static/corner_points[ro]                   0 0 0 0 0 0 0 0

connect from downsampler.timestamp
        to   kwa_writer.timestamp
connect from downsampler.output_1
        to   kwa_writer.image

process track_writer
  :: write_object_track
  :file_name                                  [INSERT_ME]
  :writer:type                                viame_csv

connect from downsampler.timestamp
        to   track_writer.timestamp
connect from tracker.object_track_set
        to   track_writer.object_track_set

process track_writer_db
  :: write_object_track
  :file_name                                  none
  :writer:type                                db
  :writer:db:conn_str                         postgresql:host=localhost;user=postgres
  :writer:db:video_name                       [INSERT_ME]

connect from downsampler.timestamp
        to   track_writer_db.timestamp
connect from tracker.object_track_set
        to   track_writer_db.object_track_set

process descriptor_writer_db
  :: write_track_descriptor
  :file_name                                  none
  :writer:type                                db
  :writer:db:conn_str                         postgresql:host=localhost;user=postgres
  :writer:db:video_name                       [INSERT_ME]

connect from track_descriptor.track_descriptor_set
        to   descriptor_writer_db.track_descriptor_set

process smqtk_indexer
  :: smqtk_ingest_descriptors
  relativepath config_file =                  smqtk_postgres_ingest.json

connect from track_descriptor.descriptor_set
        to   smqtk_indexer.descriptor_set
connect from track_descriptor.string_vector
        to   smqtk_indexer.string_vector

# -- end of file --
