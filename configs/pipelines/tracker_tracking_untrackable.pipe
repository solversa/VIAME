# Example simple tracker pipeline
#
# Runs a standalone TUT object tracking pipeline

# ============================== GLOBAL PROPERTIES =================================
# global pipeline config
#
config _pipeline:_edge
   :capacity                     5

config _scheduler
   :type                         pythread_per_process

# ============================== INPUT FRAME LIST ==================================
process input
  :: frame_list_input
  :image_list_file               input_list.txt
  :frame_time                    0.03333
  :image_reader:type             vxl
  :image_reader:vxl:force_byte   true

# ================================== DETECTOR ======================================

process detector
  :: image_object_detector
  :detector:type                 darknet

  block detector:darknet

    # Network config, weights, and names
    relativepath net_config  =   models/default_yolo_v2.cfg
    relativepath weight_file =   models/default_yolo_v2.weights
    relativepath class_names =   models/default_yolo_v2.lbl

    # Detector parameters
    :thresh                      0.001
    :hier_thresh                 0.001
    :gpu_index                   0

    # Image scaling parameters
    :resize_option               chip_and_original
    :resize_ni                   704
    :resize_nj                   704
    :scale                       1.5
    :chip_step                   600

  endblock

process nms_refiner
  :: refine_detections
  :refiner:type                       nms
  
  block refiner:nms
    :max_overlap                      0.80
    :nms_scale_factor                 1.0
    :output_scale_factor              1.0
  endblock

connect from input.image
        to   detector.image
  
connect from input.image
        to   nms_refiner.image
connect from detector.detected_object_set
        to   nms_refiner.detected_object_set

process detector_writer
  :: detected_object_output

  # Type of file to output
  :file_name                     output/individual_detections.csv
  :writer:type                   viame_csv


connect from nms_refiner.detected_object_set
        to   detector_writer.detected_object_set
connect from input.image_file_name
        to   detector_writer.image_file_name

# ================================ CORE TRACKER  ===================================

process tracker
  :: SRNN_tracking
  :siamese_model_input_size                    224
  :detection_select_threshold                  0.3
  :similarity_threshold                        0.2
  :terminate_track_threshold                   6
  :IOU_tracker_flag                            True
  :IOU_accept_threshold                        0.5
  :IOU_reject_threshold                        0.1
  :track_search_threshold                      2
  :gpu_list                                    None

  relativepath siamese_model_path =            models/siamese_model.pt
  :siamese_batch_size                          128

  relativepath targetRNN_AIM_model_path =      models/rnn_f_aim.pt
  relativepath targetRNN_AIM_V_model_path =    models/rnn_ml_aim.pt
  :targetRNN_batch_size                        256 

# Connect inputs to tracker
connect from input.image
        to   tracker.image
connect from input.timestamp
        to   tracker.timestamp
connect from nms_refiner.detected_object_set
        to   tracker.detected_object_set

# ================================= INDEX DATA  ====================================

process track_writer
  :: write_object_track
  :file_name                        output/object_tracks.csv
  :writer:type                      viame_csv
  :writer:stream_identifier         input_list.txt

# Connect inputs to track writer
connect from tracker.object_track_set
        to   track_writer.object_track_set
connect from input.timestamp
        to   track_writer.timestamp

# -- end of file --
